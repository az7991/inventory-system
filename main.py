from db import create_tables, connect_db
from auth import login, create_user, delete_user, get_all_users, decode_jwt
from inventory import add_inventory, remove_inventory, get_inventory, export_inventory_pandas, inventory_statistics
import getpass

def check_inventory_threshold(threshold=5):
    """Kontrollera lagerstatus och p√•minn om niv√•n √§r under tr√∂skelv√§rdet."""
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT item, quantity FROM inventory")
    items = cursor.fetchall()
    conn.close()

    low_stock_items = [item for item, quantity in items if quantity <= threshold]
    
    if low_stock_items:
        print("\n‚ö†Ô∏è **Varning: F√∂ljande r√•varor √§r p√• v√§g att ta slut!**")
        for item in low_stock_items:
            print(f"- {item}")
    else:
        print("Alla r√•varor har tillr√§cklig m√§ngd.")

def admin_menu():
    while True:
        print("\nüìå **Admin meny:**")
        print("1. Lista alla anv√§ndare")
        print("2. Skapa anv√§ndare")
        print("3. Ta bort anv√§ndare")
        print("4. L√§gg till r√•vara i lager")
        print("5. Ta bort r√•vara fr√•n lager")
        print("6. Exportera lager")
        print("7. Se lagerstatistik")
        print("8. Se lagerstatus")
        print("9. Logga ut")
        
        val = input("Val: ")
        
        if val == "1":
            # Lista alla anv√§ndare
            users = get_all_users()
            if users:
                print("\n**Anv√§ndare:**")
                for user in users:
                    print(f"- {user[0]}")
            else:
                print("Inga anv√§ndare finns.")
        
        elif val == "2":
            # Skapa anv√§ndare
            username = input("Ange anv√§ndarnamn: ")
            password = getpass.getpass("Ange l√∂senord: ")
            role = input("Ange roll (admin/staff): ").lower()
            create_user(username, password, role)
        
        elif val == "3":
            # Ta bort anv√§ndare
            username_to_delete = input("Ange anv√§ndarnamn att ta bort: ")
            delete_user(username_to_delete)
        
        elif val == "4":
            # L√§gg till r√•vara i lager
            item = input("Namn p√• r√•vara: ")
            quantity = int(input("M√§ngd i kg att l√§gga till: "))
            add_inventory(item, quantity)
        
        elif val == "5":
            # Ta bort r√•vara fr√•n lager
            item_to_remove = input("Ange r√•varans namn att ta bort: ")
            quantity_to_remove = int(input("Ange m√§ngd att ta bort: "))
            remove_inventory(item_to_remove, quantity_to_remove)
        
        elif val == "6":
            # Exportera lager
            filename = input("Ange filnamn f√∂r export (t.ex. inventory.xlsx): ")
            export_inventory_pandas(filename)
        
        elif val == "7":
            # Se lagerstatistik
            inventory_statistics()
        
        elif val == "8":
            # Se lagerstatus
            get_inventory()
        
        elif val == "9":
            print("Loggar ut...")
            break
        else:
            print("Ogiltigt val. F√∂rs√∂k igen.")

def staff_menu():
    while True:
        print("\nüìå **Staff meny:**")
        print("1. Ta ut r√•vara fr√•n lager")
        print("2. Se lagerstatus")
        print("3. Logga ut")
        
        choice = input("Val: ")
        
        if choice == "1":
            item = input("Namn p√• r√•vara: ")
            quantity = int(input("M√§ngd i kg att ta ut: "))
            remove_inventory(item, quantity)  # Du m√•ste ha denna funktion definierad n√•gonstans
            check_inventory_threshold()  # Och denna ocks√•
        elif choice == "2":
            get_inventory()  # Och denna, f√∂r att visa lagerstatus
        elif choice == "3":
            print("üîì Loggar ut...")
            break
        else:
            print("‚ùå Ogiltigt val, f√∂rs√∂k igen!")


def main():
    create_tables()
    print("V√§lkommen till inventariesystemet!")
    
    username = input("Anv√§ndarnamn: ")
    password = getpass.getpass("L√∂senord: ")
    token = login(username, password)
    
    if token:
        decoded_data = decode_jwt(token)
        if decoded_data:
            role = decoded_data['role']
            check_inventory_threshold()
            if role == "admin":
                admin_menu()
            elif role == "staff":
                staff_menu()
        else:
            print("Ogiltig token eller token har g√•tt ut.")
    else:
        print("Felaktigt anv√§ndarnamn eller l√∂senord.")

if __name__ == "__main__":
    main()










